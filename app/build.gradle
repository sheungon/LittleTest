apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../common.gradle'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion Integer.parseInt(COMPILE_SDK_VERSION)
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.example.littletest"
        minSdkVersion 19
        targetSdkVersion Integer.parseInt(TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /*
    * To enable Android Data Binding Library
    * See, https://developer.android.com/topic/libraries/data-binding/index.html
    * */
    dataBinding {
        enabled = true
    }
}

kapt {
    generateStubs = true
}

dependencies {
    /*
     * Kotlin
     * */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"

    // Android support library
    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    /*
     * Use TabLayout, FAB, etc.
     */
    implementation "com.android.support:design:$SUPPORT_LIB_VERSION"
    /*
     * Use CardView
     */
    implementation "com.android.support:cardview-v7:$SUPPORT_LIB_VERSION"
    /*
     * Constraint Layout
     * */
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"
    /*
     * RecyclerView-FlexibleDivider
     * https://github.com/yqritc/RecyclerView-FlexibleDivider
     * */
    implementation "com.yqritc:recyclerview-flexibledivider:$RV_FLEXIABLE_DIVIDER_VERSION"

    /*
    * Picasso
    * http://square.github.io/picasso/
    * */
    implementation 'com.squareup.picasso:picasso:2.5.2'

    /*
     * Dagger 2
     * https://github.com/google/dagger
     * */
    implementation "com.google.dagger:dagger:$DAGGER_2_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER_2_VERSION"

    /*
     * RxAndroid
     * https://github.com/ReactiveX/RxAndroid
     * */
    implementation "io.reactivex.rxjava2:rxandroid:$RX_ANDROID_VERSION"
    implementation "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION"

    /*
     * Retrofit 2
     * https://square.github.io/retrofit/
     * */
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    /*
     * okhttp interceptor
     * https://github.com/square/okhttp
      */
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_INTERCEPTOR_VERSION"

    /*
    * https://github.com/sheungon/AndroidEasyLog
    * */
    implementation "com.sotwtm.util:ec-log:$ANDROID_EC_LOG"


    // For auto test
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation "com.google.dagger:dagger:$DAGGER_2_VERSION"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$DAGGER_2_VERSION"

    testImplementation JUNIT
    testImplementation "com.google.dagger:dagger:$DAGGER_2_VERSION"
    kaptTest "com.google.dagger:dagger-compiler:$DAGGER_2_VERSION"

    androidTestImplementation "org.mockito:mockito-android:$MOCKITO_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"

    androidTestImplementation("com.github.fabioCollini.daggermock:daggermock-kotlin:$DAGGER_MOCK_VERSION", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    })
    testImplementation("com.github.fabioCollini.daggermock:daggermock-kotlin:$DAGGER_MOCK_VERSION", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jre7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    })

    testImplementation "org.powermock:powermock-api-mockito2:$POWER_MOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4-rule-agent:$POWER_MOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4-rule:$POWER_MOCK_VERSION"
    testImplementation "org.powermock:powermock-module-junit4:$POWER_MOCK_VERSION"
}
