apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../common.gradle'

android {
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.example.littletest"
        minSdkVersion 19
        targetSdkVersion target_sdk_version
        versionCode app_version_code
        versionName app_version_name
    }
    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /*
    * To enable Android Data Binding Library
    * See, https://developer.android.com/topic/libraries/data-binding/index.html
    * */
    dataBinding {
        enabled = true
    }
}

dependencies {
    api project(":sdk")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-$versions.kotlin_env:$versions.kotlin_plugin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"

    implementation "com.google.android.material:material:$versions.android_material"
    implementation "androidx.cardview:cardview:$versions.xandroid_cardview"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.androidx_lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata:$versions.androidx_lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.androidx_lifecycle"

    implementation "com.yqritc:recyclerview-flexibledivider:$versions.flexiable_divider"
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    implementation "com.google.dagger:dagger:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger_2"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger_2"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger_2"

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.ok_http_interceptor"
    implementation "com.sotwtm.util:ec-log:$versions.android_ec_log"

    // For auto test
    androidTestImplementation("androidx.test.espresso:espresso-core:$versions.espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation "com.google.dagger:dagger:$versions.dagger_2"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$versions.dagger_2"
    testImplementation deps.junit
    testImplementation "com.google.dagger:dagger:$versions.dagger_2"
    kaptTest "com.google.dagger:dagger-compiler:$versions.dagger_2"
    androidTestImplementation "org.mockito:mockito-android:$versions.mockito"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    androidTestImplementation("com.github.fabioCollini.daggermock:daggermock-kotlin:$versions.dagger_mock", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    })
    testImplementation("com.github.fabioCollini.daggermock:daggermock-kotlin:$versions.dagger_mock", {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    })
    testImplementation "org.powermock:powermock-api-mockito2:$versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4-rule-agent:$versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4-rule:$versions.power_mock"
    testImplementation "org.powermock:powermock-module-junit4:$versions.power_mock"
    testImplementation "androidx.arch.core:core-testing:2.0.0"
}
